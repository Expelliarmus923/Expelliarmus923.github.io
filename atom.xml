<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[lulizhou-blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.lulizhou.com/"/>
  <updated>2016-08-23T07:09:17.000Z</updated>
  <id>http://blog.lulizhou.com/</id>
  
  <author>
    <name><![CDATA[lulizhou]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[css3动画整理]]></title>
    <link href="http://blog.lulizhou.com/2016/08/22/css3%E5%8A%A8%E7%94%BB%E6%95%B4%E7%90%86/"/>
    <id>http://blog.lulizhou.com/2016/08/22/css3动画整理/</id>
    <published>2016-08-22T10:07:19.000Z</published>
    <updated>2016-08-23T07:09:17.000Z</updated>
    <content type="html"><![CDATA[<h2 id="animation"><a href="#animation" class="headerlink" title="animation"></a>animation</h2><p>通过强大的css3 animation可以取代大量JS代码，也能页面更加流畅。</p>
<p><strong> (1) animation-name </strong></p>
<p>定义动画名字（即keyframes的名字)</p>
<p><strong> (2) @keyframes </strong></p>
<p>如定义了animation-name:move;则需要定义</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@keyframes move &#123;</span><br><span class="line">  0%&#123;</span><br><span class="line">    //props</span><br><span class="line">  &#125;</span><br><span class="line">  100%&#123;</span><br><span class="line">    //props</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或者等同于0~100%的from to</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@keyframes move &#123;</span><br><span class="line">  from &#123;</span><br><span class="line">    //props</span><br><span class="line">  &#125;</span><br><span class="line">  to &#123;</span><br><span class="line">    //props</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong> (3) animation-duration </strong></p>
<p>动画执行的时间（单位是秒，如1s）</p>
<p><strong> (4) animation-time-function </strong></p>
<p>动画播放速度曲线,这是控制运动方式的关键，默认是ease(缓解效果)。常见还有ease-in，ease-out，以及ease-in-out和linear，以及强大的立方贝塞尔曲线效果cubic-bezier。这里列举一个不常见但却十分有用的steps。</p>
<blockquote>
<p>steps(<number>[, [ start | end ] ]?)：第一个参数number为指定的间隔数，即把动画分为n步阶段性展示，第二个参数默认为end，设置最后一步的状态，start为结束时的状态，end为开始时的状态，若设置与animation-fill-mode的效果冲突，而以animation-fill-mode的设置为动画结束的状态。</number></p>
</blockquote>
<p>这个效果可以做不需要过渡效果帧动画。</p>
<a id="more"></a>
<p><strong> (5) animation-delay </strong></p>
<p>指定对象动画延迟执行的时间(单位是秒)</p>
<p><strong> (6) animation-iteration-count </strong></p>
<p>指定对象动画循环播放的次数。infinite表示无限次</p>
<p><strong> (7) animation-direction </strong></p>
<blockquote>
<p><strong> normal</strong>：正常方向。<br><br><strong> reverse</strong>：动画反向运行,方向始终与normal相反。（FF14.0.1以下不支持）<br><br><strong> alternate</strong> ：动画会循环正反方向交替运动，奇数次（1、3、5……）会正常运动，偶数次（2、4、6……）会反向运动，即所有相关联的值都会反向。<br><br><strong> alternate-reverse</strong>：动画从反向开始，再正反方向交替运动，运动方向始终与alternate定义的相反。（FF14.0.1以下不支持）<br></p>
</blockquote>
<p>这是一个十分有用的属性，比如我们需要把某个div移动到translate3d(200px,200px,0)并且改变背景色,在normal的时候我们需要</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">keyframes</span> move</span>&#123;</span><br><span class="line">    0%<span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#32beec</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">    25%<span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#c3d9ff</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">    50%<span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#bbaad7</span></span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translate3d</span>(<span class="number">200px</span>, <span class="number">200px</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">50%</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">    75%<span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#c3d9ff</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">    100%<span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#32beec</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>把属性值设置为alternate时，只需把中间状态设置成100%达到同样的效果<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">keyframes</span> move2</span>&#123;</span><br><span class="line">      0%<span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#32beec</span></span></span>;</span><br><span class="line">      &#125;</span></span><br><span class="line">      50%<span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#c3d9ff</span></span></span>;</span><br><span class="line">      &#125;</span></span><br><span class="line">      100%<span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#bbaad7</span></span></span>;</span><br><span class="line">        <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translate3d</span>(<span class="number">200px</span>, <span class="number">200px</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">50%</span></span></span>;</span><br><span class="line">      &#125;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p><strong> (8) animation-play-state </strong></p>
<p>animation-play-state 属性规定动画正在运行还是暂停。</p>
<p><strong> (9) animation-fill-mode </strong></p>
<blockquote>
<p><strong> none</strong>：默认值。不设置对象动画之外的状态<br><br><strong> forwards</strong>：结束后保持动画结束时的状态，但当animation-direction为0，则动画不执行，持续保持动画开始时的状态<br><br><strong> backwards</strong>：结束后返回动画开始时的状态<br><br><strong> both</strong>：结束后可遵循forwards和backwards两个规则。</p>
</blockquote>
<h2 id="u53C2_u8003"><a href="#u53C2_u8003" class="headerlink" title="参考"></a>参考</h2><p><a href="http://isux.tencent.com/css3/index.html" target="_blank" rel="external">css3动画手册</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="animation"><a href="#animation" class="headerlink" title="animation"></a>animation</h2><p>通过强大的css3 animation可以取代大量JS代码，也能页面更加流畅。</p>
<p><strong> (1) animation-name </strong></p>
<p>定义动画名字（即keyframes的名字)</p>
<p><strong> (2) @keyframes </strong></p>
<p>如定义了animation-name:move;则需要定义</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@keyframes move &#123;</span><br><span class="line">  0%&#123;</span><br><span class="line">    //props</span><br><span class="line">  &#125;</span><br><span class="line">  100%&#123;</span><br><span class="line">    //props</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或者等同于0~100%的from to</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@keyframes move &#123;</span><br><span class="line">  from &#123;</span><br><span class="line">    //props</span><br><span class="line">  &#125;</span><br><span class="line">  to &#123;</span><br><span class="line">    //props</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong> (3) animation-duration </strong></p>
<p>动画执行的时间（单位是秒，如1s）</p>
<p><strong> (4) animation-time-function </strong></p>
<p>动画播放速度曲线,这是控制运动方式的关键，默认是ease(缓解效果)。常见还有ease-in，ease-out，以及ease-in-out和linear，以及强大的立方贝塞尔曲线效果cubic-bezier。这里列举一个不常见但却十分有用的steps。</p>
<blockquote>
<p>steps(<number>[, [ start | end ] ]?)：第一个参数number为指定的间隔数，即把动画分为n步阶段性展示，第二个参数默认为end，设置最后一步的状态，start为结束时的状态，end为开始时的状态，若设置与animation-fill-mode的效果冲突，而以animation-fill-mode的设置为动画结束的状态。</p>
</blockquote>
<p>这个效果可以做不需要过渡效果帧动画。</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaScript图片预加载]]></title>
    <link href="http://blog.lulizhou.com/2016/03/25/JavaScript%E5%9B%BE%E7%89%87%E9%A2%84%E5%8A%A0%E8%BD%BD/"/>
    <id>http://blog.lulizhou.com/2016/03/25/JavaScript图片预加载/</id>
    <published>2016-03-25T00:59:09.000Z</published>
    <updated>2016-09-06T09:39:48.000Z</updated>
    <content type="html"><![CDATA[<p>&#160;&#160; &#160; &#160; 首先明确一点。图片预加载的意思不是加载好所有图片再去渲染DOM。而是加载好图片执行特定的JavaScript代码。<br>&#160;&#160; &#160; &#160;比如你移动端要做个瀑布流布局，用CSS3实现的瀑布流不能满足你的业务需求，必须用javascript计算位置。这时候就遇到一个问题，移动端网速慢，而且屏幕繁多，要进行响应式布局，根据原图比例进行计算，然后图片加载速度赶不上DOM渲染速度，DOM已经加载完成了，布局的javascript代码已经执行完毕了，这时候图片却还没加载完成，无法获取原图的大小来布局。布局就完全乱了。所以必须在图片完全加载完成后运行布局的代码。<br><a id="more"></a><br>&#160;&#160; &#160; &#160; 图片预加载技术算一门老技术了（因为搜索出来的资料都是零几年的。。）目前最常见的方案是<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">preloadImg</span>(<span class="params">url</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">  img.src = url;</span><br><span class="line">  <span class="keyword">if</span>(img.complete)&#123;</span><br><span class="line">      <span class="comment">//图片有缓存，执行一些函数。。。。</span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//图片加载完成，执行一些函数。。。。</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="u591A_u56FE_u7247_u52A0_u5F3A_u7248"><a href="#u591A_u56FE_u7247_u52A0_u5F3A_u7248" class="headerlink" title="多图片加强版"></a>多图片加强版</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ImgPreLoad = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">URL, Loadfn</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ImgPreLoad = <span class="function"><span class="keyword">function</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">            img.src = url;</span><br><span class="line">            <span class="keyword">if</span> (img.complete) &#123;</span><br><span class="line">                Loadfn.call(<span class="keyword">this</span>);</span><br><span class="line">                <span class="comment">// console.log("complete!");</span></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    Loadfn.call(<span class="keyword">this</span>);</span><br><span class="line">                    <span class="comment">// console.log("onload!");</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                img.onerror = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"图片加载失败!"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line">        (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (URL <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> index = <span class="number">0</span>; index &lt; URL.length; index++)</span><br><span class="line">                    ImgPreLoad(URL[index]);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">"URL不是数组"</span>)</span><br><span class="line">        &#125;)()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>&#160;&#160; &#160; &#160; 首先明确一点。图片预加载的意思不是加载好所有图片再去渲染DOM。而是加载好图片执行特定的JavaScript代码。<br>&#160;&#160; &#160; &#160;比如你移动端要做个瀑布流布局，用CSS3实现的瀑布流不能满足你的业务需求，必须用javascript计算位置。这时候就遇到一个问题，移动端网速慢，而且屏幕繁多，要进行响应式布局，根据原图比例进行计算，然后图片加载速度赶不上DOM渲染速度，DOM已经加载完成了，布局的javascript代码已经执行完毕了，这时候图片却还没加载完成，无法获取原图的大小来布局。布局就完全乱了。所以必须在图片完全加载完成后运行布局的代码。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[libSass+compass工作流搭建]]></title>
    <link href="http://blog.lulizhou.com/2016/02/29/libSass-compass%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%90%AD%E5%BB%BA/"/>
    <id>http://blog.lulizhou.com/2016/02/29/libSass-compass工作流搭建/</id>
    <published>2016-02-29T08:14:41.000Z</published>
    <updated>2016-02-29T09:20:03.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u77E5_u8BC6_u50A8_u5907"><a href="#u77E5_u8BC6_u50A8_u5907" class="headerlink" title="知识储备"></a>知识储备</h2><ul>
<li><a href="http://sass-lang.com/libsass" target="_blank" rel="external">LibSass</a></li>
<li><a href="http://nodejs.org" target="_blank" rel="external">Nodejs</a></li>
<li><a href="http://bower.io" target="_blank" rel="external">Bower</a></li>
<li><a href="http://gulpjs.com" target="_blank" rel="external">Glup</a></li>
</ul>
<p>libSass是一套用C/C++写的sass编译引擎。其目的就是为了让sass脱离ruby的绑定。可以直接用nodejs来编译sass文件,比如官方的<a href="https://github.com/sass/node-sass" target="_blank" rel="external">node-sass</a>。</p>
<h2 id="u73AF_u5883_u642D_u5EFA"><a href="#u73AF_u5883_u642D_u5EFA" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><a href="http://nodejs.org" target="_blank" rel="external">Nodejs</a> 官网已经提供很详细的安装方式了，建议直接上最新版。<br>由于你懂的原因，国内npm源访问速度感人，建议直接上<a href="https://npm.taobao.org/" target="_blank" rel="external">淘宝npm源</a><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 你的工作文件夹  </span><br><span class="line">mkdir sass css</span><br><span class="line">npm init //一路enter就行了</span><br><span class="line">bower init //同上</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="u5DE5_u4F5C_u6D41_u642D_u5EFA"><a href="#u5DE5_u4F5C_u6D41_u642D_u5EFA" class="headerlink" title="工作流搭建"></a>工作流搭建</h2><p><a href="http://gulpjs.com" target="_blank" rel="external">Glup</a>是款强大的工作流解决方案。配置简单，马上上手<br>glup-sass是sass的glup版本，会自动默认调用node-sass<br>gulp-sourcemaps方便调试sass文件</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install glup node-sass gulp-sass gulp-sourcemaps --save-dev&#10;subl gulpfile.js  &#10;//&#29992;sublime&#25171;&#24320;gulpfile.js&#25991;&#20214;,window&#19979;&#30452;&#25509;&#26032;&#24314;gulpfile.js&#25991;&#20214;&#23601;&#34892;&#20102;&#12290;</span><br></pre></td></tr></table></figure>
<p>这里是我的gulpfile.js文件.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> sass = <span class="built_in">require</span>(<span class="string">'gulp-sass'</span>);</span><br><span class="line"><span class="keyword">var</span> sourcemaps = <span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>);</span><br><span class="line"> <span class="comment">//sass配置项</span></span><br><span class="line"><span class="keyword">var</span> opition = &#123;</span><br><span class="line">	outputStyle:<span class="string">"expanded"</span>   </span><br><span class="line">  <span class="comment">//expanded行尾花括号换号 compact一行上天 compressed 压缩版本(生产版本)</span></span><br><span class="line">&#125;</span><br><span class="line">gulp.task(<span class="string">'sass'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> gulp.src(<span class="string">'./sass/**/*.&#123;scss,sass&#125;'</span>)</span><br><span class="line">	.pipe(sourcemaps.init())</span><br><span class="line">	.pipe(sass(opition).on(<span class="string">'error'</span>,sass.logError))</span><br><span class="line">	.pipe(sourcemaps.write())</span><br><span class="line">	.pipe(gulp.dest(<span class="string">'./css'</span>));</span><br><span class="line">&#125;);</span><br><span class="line">gulp.task(<span class="string">"sass:watch"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	gulp.watch(<span class="string">'./sass/*.scss'</span>,[<span class="string">'sass'</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>在sass文件夹下新建test.scss<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$red</span><span class="value">:<span class="hexcolor">#d5d5d5</span>;</span></span><br><span class="line"><span class="class">.red</span>&#123;</span><br><span class="line">	<span class="attribute">background</span><span class="value">: <span class="variable">$red</span>;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gulp sass //编译一次</span><br><span class="line">gulp sass:watch // 监控文件改变自动编译</span><br></pre></td></tr></table></figure></p>
<p>这时候应该能看到css目录下多了个test.css,说明环境搭建成功!</p>
<h2 id="u6DFB_u52A0compass"><a href="#u6DFB_u52A0compass" class="headerlink" title="添加compass"></a>添加compass</h2><p>compass-mixins把compass的mixin拿出来了，用bower直接安装。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bower install compass-mixins --save</span><br></pre></td></tr></table></figure></p>
<p>这时候会产生一个bower_components底下会产生compass-mixins文件夹<br>新建_var.scss<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$red</span><span class="value">:<span class="hexcolor">#d5d5d5</span>;</span></span><br><span class="line"><span class="variable">$blue</span><span class="value">:<span class="hexcolor">#442342</span>;</span></span><br></pre></td></tr></table></figure></p>
<p>修改test.scss<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">import</span> <span class="string">"_var.scss"</span>;</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">import</span> <span class="string">"../bower_components/compass-mixins/lib/compass"</span>;</span> </span><br><span class="line"><span class="class">.red</span>&#123;</span><br><span class="line">	<span class="attribute">background</span><span class="value">: <span class="variable">$red</span>;</span></span><br><span class="line">	<span class="at_rule">@<span class="keyword">include</span><span class="preprocessor"> box-sizing</span>(<span class="string">'border-box '</span>);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Done!</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u77E5_u8BC6_u50A8_u5907"><a href="#u77E5_u8BC6_u50A8_u5907" class="headerlink" title="知识储备"></a>知识储备</h2><ul>
<li><a href="http://sass-lang.com/libsass">LibSass</a></li>
<li><a href="http://nodejs.org">Nodejs</a></li>
<li><a href="http://bower.io">Bower</a></li>
<li><a href="http://gulpjs.com">Glup</a></li>
</ul>
<p>libSass是一套用C/C++写的sass编译引擎。其目的就是为了让sass脱离ruby的绑定。可以直接用nodejs来编译sass文件,比如官方的<a href="https://github.com/sass/node-sass">node-sass</a>。</p>
<h2 id="u73AF_u5883_u642D_u5EFA"><a href="#u73AF_u5883_u642D_u5EFA" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><a href="http://nodejs.org">Nodejs</a> 官网已经提供很详细的安装方式了，建议直接上最新版。<br>由于你懂的原因，国内npm源访问速度感人，建议直接上<a href="https://npm.taobao.org/">淘宝npm源</a><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 你的工作文件夹  </span><br><span class="line">mkdir sass css</span><br><span class="line">npm init //一路enter就行了</span><br><span class="line">bower init //同上</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaScript里的闭包]]></title>
    <link href="http://blog.lulizhou.com/2016/02/22/JavaScript%E9%87%8C%E7%9A%84%E9%97%AD%E5%8C%85/"/>
    <id>http://blog.lulizhou.com/2016/02/22/JavaScript里的闭包/</id>
    <published>2016-02-22T12:40:20.000Z</published>
    <updated>2016-02-26T02:17:35.000Z</updated>
    <content type="html"><![CDATA[<p>JavaScript高级程序设计关于闭包的解释:</p>
<blockquote>
<p>闭包是指有权访问另一个函数作用域中的变量函数。<br>创建闭包的常见方式，就是在一个函数内部创建另一个函数。</p>
</blockquote>
<a id="more"></a>
<p>模仿书上例子写个闭包！</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Counter</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(num++);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> counter =Counter();</span><br><span class="line">counter(); <span class="comment">//0</span></span><br><span class="line">counter(); <span class="comment">//1</span></span><br><span class="line">counter(); <span class="comment">//2</span></span><br></pre></td></tr></table></figure>
<hr>
<p>每次都要调用两次函数于是就衍生出IIFE <strong><em> (Immediately Invoked Function Expression)</em></strong> 的形式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> counter = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(num++);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br><span class="line">counter(); <span class="comment">//0</span></span><br><span class="line">counter(); <span class="comment">//1</span></span><br><span class="line">counter(); <span class="comment">//2</span></span><br></pre></td></tr></table></figure></p>
<p>简单的说:</p>
<blockquote>
<p>闭包是个函数，而它「记住了周围发生了什么」。表现为由「一个函数」体中定义了「另个函数」</p>
</blockquote>
<p><strong><em>闭包的形成原因是函数里的匿名函数不会随着函数销毁而销毁，并且其匿名函数完整地保留了函数的活动对象。</em></strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>JavaScript高级程序设计关于闭包的解释:</p>
<blockquote>
<p>闭包是指有权访问另一个函数作用域中的变量函数。<br>创建闭包的常见方式，就是在一个函数内部创建另一个函数。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="JavaScript 编程" scheme="http://blog.lulizhou.com/tags/JavaScript-%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《JavaScript权威指南》读书笔记]]></title>
    <link href="http://blog.lulizhou.com/2016/02/17/%E3%80%8Ajavascript%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.lulizhou.com/2016/02/17/《javascript权威指南》读书笔记/</id>
    <published>2016-02-17T01:46:05.000Z</published>
    <updated>2016-02-29T09:08:02.000Z</updated>
    <content type="html"><![CDATA[<p>说明：页数（章节）</p>
<p><strong> 1.什么是原型？</strong></p>
<blockquote>
<p>每一个JavaScript对象（除null）都和另一个对象相关联。”另一个”对象就是我们熟知的原型，每一个对象都从原型继承属性。–121(6.1.3)</p>
<p>所有通过对象直接量创建的对象都具有同一个原型对象，并可以通过Object.prototype获得对原型对象的引用。–121(6.1.3)</p>
<p>类的所有实例对象都从同一个原型对象上继承属性。–202(9.1)</p>
</blockquote>
<p><strong> 2.什么是原型链？ </strong></p>
<blockquote>
<p>所有内置构造函数（以及大部分自定义的构造函数）都具有一个继承自Obejct.prototype的原型。这一系列链接的原型对象就是所谓的”原型链”「prototype chain」。–121(6.1.3)</p>
</blockquote>
<a id="more"></a>
<p><strong> 3.什么是闭包？ </strong></p>
<blockquote>
<p>函数对象可以通过作用域链相互关联起来，函数体内部的变量都可以保存在函数作用域内。–182(8.6)</p>
<p>闭包这个特性强大到让人吃惊：它们可以捕捉到局部变量（和参数），并一直保存下来，看起来像这些变量绑定到了在其中定义它们的外部函数。–184（8.6）</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>说明：页数（章节）</p>
<p><strong> 1.什么是原型？</strong></p>
<blockquote>
<p>每一个JavaScript对象（除null）都和另一个对象相关联。”另一个”对象就是我们熟知的原型，每一个对象都从原型继承属性。–121(6.1.3)</p>
<p>所有通过对象直接量创建的对象都具有同一个原型对象，并可以通过Object.prototype获得对原型对象的引用。–121(6.1.3)</p>
<p>类的所有实例对象都从同一个原型对象上继承属性。–202(9.1)</p>
</blockquote>
<p><strong> 2.什么是原型链？ </strong></p>
<blockquote>
<p>所有内置构造函数（以及大部分自定义的构造函数）都具有一个继承自Obejct.prototype的原型。这一系列链接的原型对象就是所谓的”原型链”「prototype chain」。–121(6.1.3)</p>
</blockquote>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[tiny progress]]></title>
    <link href="http://blog.lulizhou.com/2016/01/28/tiny-progress/"/>
    <id>http://blog.lulizhou.com/2016/01/28/tiny-progress/</id>
    <published>2016-01-28T07:57:27.000Z</published>
    <updated>2016-02-17T01:56:33.000Z</updated>
    <content type="html"><![CDATA[<h1 id="tiny-progress_28_u7F51_u9875_u9876_u90E8_u8FDB_u5EA6_u6761_29"><a href="#tiny-progress_28_u7F51_u9875_u9876_u90E8_u8FDB_u5EA6_u6761_29" class="headerlink" title="tiny-progress(网页顶部进度条)"></a>tiny-progress(网页顶部进度条)</h1><p>最近看阮一峰的<a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">技术博客</a>看到的一个插件，自己实现了一波。第一个小轮子，轻喷。</p>
<h2 id="Preview_28_u9884_u89C8_29"><a href="#Preview_28_u9884_u89C8_29" class="headerlink" title="Preview(预览)"></a>Preview(预览)</h2><p><a href="http://output.jsbin.com/lokiro" target="_blank" rel="external">http://output.jsbin.com/lokiro</a></p>
<h2 id="usage_uFF08_u4F7F_u7528_uFF09"><a href="#usage_uFF08_u4F7F_u7528_uFF09" class="headerlink" title="usage（使用）"></a>usage（使用）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"tiny-progress.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">new porgressbar();</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="Config_uFF08_u914D_u7F6E_uFF09"><a href="#Config_uFF08_u914D_u7F6E_uFF09" class="headerlink" title="Config（配置）"></a>Config（配置）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> defaultconfig = &#123;</span><br><span class="line">    height: <span class="string">"4px"</span>, <span class="comment">//进度条高度</span></span><br><span class="line">    background: <span class="string">"rgb(18, 134, 134)"</span> <span class="comment">//进度条颜色</span></span><br><span class="line">    &#125;         </span><br><span class="line"><span class="keyword">new</span> porgressbar(defaultconfig);</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="tiny-progress_28_u7F51_u9875_u9876_u90E8_u8FDB_u5EA6_u6761_29"><a href="#tiny-progress_28_u7F51_u9875_u9876_u90E8_u8FDB_u5EA6_u6761_29" class="headerlink" title="tiny-progress(网页顶部进度条)"></a>tiny-progress(网页顶部进度条)</h1><p>最近看阮一峰的<a href="http://es6.ruanyifeng.com/">技术博客</a>看到的一个插件，自己实现了一波。第一个小轮子，轻喷。</p>
<h2 id="Preview_28_u9884_u89C8_29"><a href="#Preview_28_u9884_u89C8_29" class="headerlink" title="Preview(预览)"></a>Preview(预览)</h2><p><a href="http://output.jsbin.com/lokiro">http://output.jsbin.com/lokiro</a></p>
<h2 id="usage_uFF08_u4F7F_u7528_uFF09"><a href="#usage_uFF08_u4F7F_u7528_uFF09" class="headerlink" title="usage（使用）"></a>usage（使用）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"tiny-progress.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">new porgressbar();</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://blog.lulizhou.com/2016/01/28/hello-world/"/>
    <id>http://blog.lulizhou.com/2016/01/28/hello-world/</id>
    <published>2016-01-28T07:30:19.000Z</published>
    <updated>2016-01-28T07:30:19.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start"><a href="#Quick_Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create_a_new_post"><a href="#Create_a_new_post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server"><a href="#Run_server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files"><a href="#Generate_static_files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites"><a href="#Deploy_to_remote_sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.]]>
    </summary>
    
  </entry>
  
</feed>
